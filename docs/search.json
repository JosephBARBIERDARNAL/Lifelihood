[{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/1-required-data-format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1 - What is the required data format","text":"life history data nature heterogeneous observations sample, format data required can somewhat tricky. hood, lifelihood creates text file containing data (parameters), use file (core) source code. Fortunately, lifelihood automatically transform dataframe text file right format. vignette, ’ll look dataframe containing data needs formatted Lifelihood programme work properly.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/1-required-data-format.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"1 - What is the required data format","text":"Let’s create simple dataset just 7 observations following columns: sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. extra1 Column name first column add input data file extra2 Column name second column add input data file extra3 Column name third column add input data file can see, observations made ponts, leading presence NULL values. One row dataset represent life history one observation.","code":"df <- data.frame(   geno = c(1, 3, 1, 0, 2, 0, 1),   sex = c(0, 0, 0, 0, 0, 0, 0),   sex_start = c(1, 3, 2, 10, 3, 4, 5),   sex_end = c(2, 4, 3, 11, 4, 5, 6),   mat_start = c(2, 1, 0, 1, 0, 2, 1),   mat_end = c(4, 2, 1000, 2, 1000, 3, 2),   clutch_start1 = c(3, 2, NA, 2, NA, 3, 2),   clutch_end1 = c(4, 3, NA, 3, NA, 4, 3),   clutch_size1 = c(4, 6, NA, 5, NA, 2, 30),   clutch_start2 = c(5, NA, NA, 5, NA, 4, 3),   clutch_end2 = c(6, NA, NA, 6, NA, 5, 4),   clutch_size2 = c(5, NA, NA, 7, NA, 10, 5),   clutch_start3 = c(7, NA, NA, 6, NA, NA, 5),   clutch_end3 = c(8, NA, NA, 7, NA, NA, 6),   clutch_size3 = c(1, NA, NA, 1, NA, NA, 2),   mor_start = c(8, 11, 0, 11, 0, 7, 9),   mor_end = c(12, 11, 1, 12, 1, 8, 10) )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/1-required-data-format.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"1 - What is the required data format","text":"dataframe right format, now create configuration file.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2 - Setting up the configuration file","text":"Since lifelihood allows large number combinations parameters estimate given dataset, makes easier separate configuration file specify want fit. hood, program use file estimate specified returns estimations. needed configuration file must YAML format, convenient kind file easy read (humans) parse (program). relies indentation represent structure. Learn YAML.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"2 - Setting up the configuration file","text":"3 main sections required YAML configuration file: mortality: parameters related mortality maturity: parameters related maturity reproduction: parameters related reproduction","code":""},{"path":[]},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"possible-values","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Possible values","title":"2 - Setting up the configuration file","text":"Assuming 2 covariables dataset (named covar1 covar2), estimation parameters, following values possible: not_fitted: estimate parameter. 1: fit intercept. covar1: fit intercept parameter covar1. covar1 + covar2: fit intercept, parameter covar1 parameter covar1. covar1 + covar2 + covar1*covar2: fit intercept, parameter covar1, parameter covar1 interaction covar1 covar2. Note: covar1 covar2 arbitrary names. rule name one columns dataset.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"mortality","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Mortality","title":"2 - Setting up the configuration file","text":"expt_death: Expected time death survival_shape: Survival shape parameter ratio_expt_death: Ratio expected time death male vs expected time death female prob_death: Probability death critical time sex_ratio: Sex ratio","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"maturity","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Maturity","title":"2 - Setting up the configuration file","text":"expt_maturity: Expected time maturity maturity_shape: Maturity shape parameter ratio_expt_maturity: Ratio expected time maturity male expected time maturity female","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"reproduction","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Reproduction","title":"2 - Setting up the configuration file","text":"expt_reproduction: Expected time next reproduction reproduction_shape: Reproduction shape parameter n_offspring: Number offsprings per reproduction event fitness increase_death_hazard: Increase death hazard following reproduction event tof_reduction_date: Trade-reduction date increase_tof_n_offspring: Increase trade-proportional number offspring lin_decrease_hazard: Linear decrease hazard rate time since maturity quad_decrease_hazard: Quadratic decrease hazard rate time since maturity lin_change_n_offspring: Linear change number offspring time since maturity quad_change_n_offspring: Quadratic change number offsprings time since maturity tof_n_offspring: Trade-previous reproductive interval current number offspring","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"2 - Setting up the configuration file","text":"","code":"--- mortality:   expt_death: geno   survival_shape: geno + type + geno*type   ratio_expt_death: geno   prob_death: geno   sex_ratio: not_fitted maturity:   expt_maturity: geno + type   maturity_shape: geno   ratio_expt_maturity: geno + type reproduction:   expt_reproduction: geno   reproduction_shape: not_fitted   n_offspring: geno   increase_death_hazard: geno + type + geno*type   tof_reduction_date: geno   increase_tof_n_offspring: geno   lin_decrease_hazard: geno + type + geno*type   quad_decrease_hazard: geno   lin_change_n_offspring: geno   quad_change_n_offspring: geno   tof_n_offspring: not_fitted"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/2-setting-up-the-configuration-file.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"2 - Setting up the configuration file","text":"next step actually use package.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"3 - How to use the lifelihood package","text":"","code":"# library(lifelihood) devtools::load_all(compile = FALSE) ## ℹ Loading lifelihood"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"3 - How to use the lifelihood package","text":"Load dataset .csv file: Prepare input parameters lifelihoodData() function:","code":"# input data df <- read.csv(here::here(\"data/fake_sample.csv\")) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"create-the-lifelihooddata-object","dir":"Articles","previous_headings":"","what":"Create the lifelihoodData object","title":"3 - How to use the lifelihood package","text":"","code":"dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )"},{"path":[]},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"all-default-parameters","dir":"Articles","previous_headings":"Get the results","what":"All default parameters","title":"3 - How to use the lifelihood package","text":"","code":"results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   seeds = c(1, 2, 3, 4) ) ## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'expt_death' is close to the minimum bound: expt_death≃0.00100001501166327. ## Consider decreasing minimum bound. ## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'survival_shape' is close to the maximum bound: ## survival_shape≃499.999999980072. Consider increasing maximum bound. ## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'prob_death' is close to the minimum bound: prob_death≃1.00360805190315e-05. ## Consider decreasing minimum bound. ## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'lin_decrease_hazard' is close to the maximum bound: ## lin_decrease_hazard≃19.9987058464802. Consider increasing maximum bound. summary(results) ## LIFELIHOOD RESULTS ##  ## Likelihood: ## [1] -829.0578 ##  ## Effects: ##                       name  estimation stderror         metric        kind ## 1           int_expt_death -14.9533770        0     expt_death   intercept ## 2     eff_expt_death_geno1   2.2706453        0     expt_death coefficient ## 3     eff_expt_death_type1  -9.5537176        0     expt_death coefficient ## 4     eff_expt_death_type2   0.5331565        0     expt_death coefficient ## 5       int_survival_shape  10.2879238        0 survival_shape   intercept ## 6 eff_survival_shape_geno1  -1.9396319        0 survival_shape coefficient ##       event ## 1 mortality ## 2 mortality ## 3 mortality ## 4 mortality ## 5 mortality ## 6 mortality"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"get-specific-results","dir":"Articles","previous_headings":"","what":"Get specific results","title":"3 - How to use the lifelihood package","text":"Get estimations: Get maximum likelihood found:","code":"results$effects ##                                     name   estimation stderror ## 1                         int_expt_death -14.95337701        0 ## 2                   eff_expt_death_geno1   2.27064527        0 ## 3                   eff_expt_death_type1  -9.55371757        0 ## 4                   eff_expt_death_type2   0.53315647        0 ## 5                     int_survival_shape  10.28792377        0 ## 6               eff_survival_shape_geno1  -1.93963186        0 ## 7               eff_survival_shape_type1   7.57026237        0 ## 8               eff_survival_shape_type2   4.74998927        0 ## 9         eff_survival_shape_type1:geno1  -0.24718760        0 ## 10        eff_survival_shape_type2:geno1   3.52427897        0 ## 11                  int_ratio_expt_death  -1.45299283        0 ## 12            eff_ratio_expt_death_geno1   3.02680049        0 ## 13                        int_prob_death -17.15815657        0 ## 14                  eff_prob_death_geno1   0.02066385        0 ## 15                     int_expt_maturity  -0.07781130        0 ## 16               eff_expt_maturity_geno1  -0.34729932        0 ## 17               eff_expt_maturity_type1  -0.76380036        0 ## 18               eff_expt_maturity_type2  -0.75476253        0 ## 19                    int_maturity_shape -10.02261060        0 ## 20              eff_maturity_shape_geno1  -3.30865726        0 ## 21               int_ratio_expt_maturity   1.74264178        0 ## 22         eff_ratio_expt_maturity_geno1   3.36233997        0 ## 23         eff_ratio_expt_maturity_type1  -2.79189482        0 ## 24         eff_ratio_expt_maturity_type2  -4.87384990        0 ## 25                 int_expt_reproduction  -1.79104715        0 ## 26           eff_expt_reproduction_geno1  -0.89759305        0 ## 27                             int_pontn  -2.96400432        0 ## 28                       eff_pontn_geno1  -1.03064224        0 ## 29             int_increase_death_hazard   3.32326622        0 ## 30       eff_increase_death_hazard_geno1   2.18470307        0 ## 31       eff_increase_death_hazard_type1  -0.38970742        0 ## 32       eff_increase_death_hazard_type2  -3.84713473        0 ## 33 eff_increase_death_hazard_type1:geno1  -1.13985166        0 ## 34 eff_increase_death_hazard_type2:geno1  -3.69784224        0 ## 35                int_tof_reduction_date  -1.27913674        0 ## 36          eff_tof_reduction_date_geno1  -3.51198283        0 ## 37          int_increase_tof_n_offspring   0.24026695        0 ## 38    eff_increase_tof_n_offspring_geno1  -0.32428130        0 ## 39               int_lin_decrease_hazard   0.81074061        0 ## 40         eff_lin_decrease_hazard_geno1   0.19505972        0 ## 41         eff_lin_decrease_hazard_type1   5.50927699        0 ## 42         eff_lin_decrease_hazard_type2  -0.85842716        0 ## 43   eff_lin_decrease_hazard_type1:geno1   3.98397092        0 ## 44   eff_lin_decrease_hazard_type2:geno1   0.69812447        0 ## 45                   int_quad_senescence  -0.49711337        0 ## 46             eff_quad_senescence_geno1   0.47173154        0 ## 47              int_quad_decrease_hazard  -0.07370047        0 ## 48        eff_quad_decrease_hazard_geno1  -0.14027753        0 ## 49           int_quad_change_n_offspring   0.07862816        0 ## 50     eff_quad_change_n_offspring_geno1   0.00640363        0 ## 51                   int_tof_n_offspring  -0.21320110        0 ##                      metric        kind        event ## 1                expt_death   intercept    mortality ## 2                expt_death coefficient    mortality ## 3                expt_death coefficient    mortality ## 4                expt_death coefficient    mortality ## 5            survival_shape   intercept    mortality ## 6            survival_shape coefficient    mortality ## 7            survival_shape coefficient    mortality ## 8            survival_shape coefficient    mortality ## 9            survival_shape coefficient    mortality ## 10           survival_shape coefficient    mortality ## 11         ratio_expt_death   intercept    mortality ## 12         ratio_expt_death coefficient    mortality ## 13               prob_death   intercept    mortality ## 14               prob_death coefficient    mortality ## 15            expt_maturity   intercept     maturity ## 16            expt_maturity coefficient     maturity ## 17            expt_maturity coefficient     maturity ## 18            expt_maturity coefficient     maturity ## 19           maturity_shape   intercept     maturity ## 20           maturity_shape coefficient     maturity ## 21      ratio_expt_maturity   intercept     maturity ## 22      ratio_expt_maturity coefficient     maturity ## 23      ratio_expt_maturity coefficient     maturity ## 24      ratio_expt_maturity coefficient     maturity ## 25        expt_reproduction   intercept reproduction ## 26        expt_reproduction coefficient reproduction ## 27                    pontn   intercept reproduction ## 28                    pontn coefficient reproduction ## 29    increase_death_hazard   intercept reproduction ## 30    increase_death_hazard coefficient reproduction ## 31    increase_death_hazard coefficient reproduction ## 32    increase_death_hazard coefficient reproduction ## 33    increase_death_hazard coefficient reproduction ## 34    increase_death_hazard coefficient reproduction ## 35       tof_reduction_date   intercept reproduction ## 36       tof_reduction_date coefficient reproduction ## 37 increase_tof_n_offspring   intercept reproduction ## 38 increase_tof_n_offspring coefficient reproduction ## 39      lin_decrease_hazard   intercept reproduction ## 40      lin_decrease_hazard coefficient reproduction ## 41      lin_decrease_hazard coefficient reproduction ## 42      lin_decrease_hazard coefficient reproduction ## 43      lin_decrease_hazard coefficient reproduction ## 44      lin_decrease_hazard coefficient reproduction ## 45          quad_senescence   intercept reproduction ## 46          quad_senescence coefficient reproduction ## 47     quad_decrease_hazard   intercept reproduction ## 48     quad_decrease_hazard coefficient reproduction ## 49  quad_change_n_offspring   intercept reproduction ## 50  quad_change_n_offspring coefficient reproduction ## 51          tof_n_offspring   intercept reproduction results$likelihood ## [1] -829.0578"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/3-how-to-use-lifelihood.html","id":"next-step","dir":"Articles","previous_headings":"","what":"Next step","title":"3 - How to use the lifelihood package","text":"Now seen use package, can go customise parameter boundaries deal estimation warnings.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"4 - Custom parameter boundaries and estimation warning","text":"","code":"# library(lifelihood) devtools::load_all(compile = FALSE) ## ℹ Loading lifelihood"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"4 - Custom parameter boundaries and estimation warning","text":"Load dataset .csv file: Prepare input parameters lifelihood() function:","code":"# input data df <- read.csv(here::here(\"data/fake_sample.csv\")) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"create-the-lifelihooddata-object","dir":"Articles","previous_headings":"","what":"Create the lifelihoodData object","title":"4 - Custom parameter boundaries and estimation warning","text":"","code":"dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"get-the-results","dir":"Articles","previous_headings":"","what":"Get the results","title":"4 - Custom parameter boundaries and estimation warning","text":"Let’s run analysis default parameters.","code":"results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\") )"},{"path":[]},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"what-is-it","dir":"Articles","previous_headings":"Warning","what":"What is it?","title":"4 - Custom parameter boundaries and estimation warning","text":"runnning lifelihood() function, might encounter following warning: warning indicates estimation increase_death_hazard parameter close maximum bound. error, signal estimation increase_death_hazard parameter approaching upper limit. optimization process, algorithm may constrained current parameter boundaries, potentially affecting accuracy estimation. address warning, can consider increasing maximum bound increase_death_hazard parameter. give optimization algorithm flexibility find best estimate.","code":"## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'increase_death_hazard' is close to the maximum bound: ## increase_death_hazard≃9.9864992332278. Consider increasing maximum bound."},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/4-custom-param-boundaries-and-estimation-warning.html","id":"customize-parameter-boundaries","dir":"Articles","previous_headings":"Warning","what":"Customize parameter boundaries","title":"4 - Custom parameter boundaries and estimation warning","text":"can get parameter boundaries default_bounds_df() function passing lifelihoodData object: Since 10 seems high enough, let’s try 80: ’s changed, just call lifelihood() param_bounds_df argument: Now don’t get warning!","code":"bounds_df <- default_bounds_df(dataLFH) bounds_df[bounds_df$name == \"increase_death_hazard\", \"max\"] <- 80 results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   param_bounds_df = bounds_df ) ## Warning in check_valid_estimation(results_lifelihood = results): Estimation of ## 'survival_shape' is close to the maximum bound: ## survival_shape≃498.470107363856. Consider increasing maximum bound. summary(results) ## LIFELIHOOD RESULTS ##  ## Likelihood: ## [1] -1794.139 ##  ## Effects: ##                       name estimation stderror         metric        kind ## 1           int_expt_death -3.3564396        0     expt_death   intercept ## 2     eff_expt_death_geno1 -0.3647447        0     expt_death coefficient ## 3     eff_expt_death_type1 -3.2768924        0     expt_death coefficient ## 4     eff_expt_death_type2 -1.3185115        0     expt_death coefficient ## 5       int_survival_shape  0.4119878        0 survival_shape   intercept ## 6 eff_survival_shape_geno1  0.1601480        0 survival_shape coefficient ##       event ## 1 mortality ## 2 mortality ## 3 mortality ## 4 mortality ## 5 mortality ## 6 mortality"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"how-to-contribute","dir":"Articles","previous_headings":"","what":"How to Contribute","title":"Contributing to Lifelihood","text":"reading article, recommend familiarizing overview Lifelihood works.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"introduction","dir":"Articles","previous_headings":"How to Contribute","what":"Introduction","title":"Contributing to Lifelihood","text":"document outlines guidelines steps contributing Lifelihood R package. Contributions community help improve functionality, address bugs, ensure Lifelihood remains robust --date. guide covers setting development environment, working Git, submitting changes.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"setting-up-your-development-environment","dir":"Articles","previous_headings":"How to Contribute","what":"Setting Up Your Development Environment","title":"Contributing to Lifelihood","text":"start contributing, ’ll need set local development environment can modify, build, test Lifelihood. Follow steps get started: Fork Repository Clone Fork Locally: run following command terminal, replacing nrode GitHub username: Install Development Dependencies: install necessary dependencies development, including Lifelihood , running:","code":"git clone https://github.com/nrode/Lifelihood.git cd Lifelihood git remote add upstream https://github.com/nrode/Lifelihood git checkout -b feature-name install.packages(\"devtools\") devtools::install()"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"documenting","dir":"Articles","previous_headings":"How to Contribute","what":"Documenting","title":"Contributing to Lifelihood","text":"Documentation Lifelihood managed Roxygen2. add modify functions, update documentation running:","code":"devtools::document()"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"testing-and-validation","dir":"Articles","previous_headings":"How to Contribute","what":"Testing and Validation","title":"Contributing to Lifelihood","text":"Lifelihood includes suite unit tests located tests/ directory. tests help ensure changes don’t break existing functionality. Run tests using: Ensure tests pass submitting pull request. Adding new tests new features bug fixes highly encouraged.","code":"devtools::test()"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/contributing.html","id":"submitting-a-pull-request-pr","dir":"Articles","previous_headings":"How to Contribute","what":"Submitting a Pull Request (PR)","title":"Contributing to Lifelihood","text":"changes complete tested, submit pull request propose integrating main Lifelihood repository: Add, commit push branch fork GitHub: pull request (PR) opened, GitHub Actions automatically run checks validate changes. checks include testing codebase, ensuring consistent documentation, verifying cross-platform compatibility. can view status checks directly pull request interface.","code":"git add -A git commit -m 'commit description' git push"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"how-lifelihood-works","dir":"Articles","previous_headings":"","what":"How Lifelihood Works","title":"Overview of Lifelihood (for developers)","text":"document provides overview internal workings Lifelihood R package. intended developers contributors wish understand extend package’s functionality.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"introduction","dir":"Articles","previous_headings":"How Lifelihood Works","what":"Introduction","title":"Overview of Lifelihood (for developers)","text":"Lifelihood R package designed complex quantitative biology survival analysis calculations. achieve high computational performance, core calculations performed using Pascal code, integrated R package interface layer. package’s structure facilitates efficient interaction R Pascal, making scalable handling large datasets complex survival analysis models.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"package-structure","dir":"Articles","previous_headings":"How Lifelihood Works","what":"Package Structure","title":"Overview of Lifelihood (for developers)","text":"Lifelihood package organized following primary components: R Interface: Provides user-facing functions set helper functions input validation, data preprocessing, postprocessing results. Pascal Backend: Manages core computational tasks survival analysis, allowing performance-optimized calculations challenging achieve solely R. Interface Layer: Facilitates communication R Pascal.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"directory-structure","dir":"Articles","previous_headings":"How Lifelihood Works > Package Structure","what":"Directory Structure","title":"Overview of Lifelihood (for developers)","text":"key directories files package organized follows: vignettes/: Quarto files used documentation website. R/: Contains R functions, user interface code, helper functions. src/: Houses Pascal source code executables. man/: Documentation files function, generated via Roxygen2. tests/: Unit integration tests validating package functionality. DESCRIPTION: Provides metadata package (authors, version, description, etc.). NAMESPACE: Specifies functions exported Lifelihood.","code":"lifelihood/ ├── vignettes/ ├── R/ ├── src/ ├── tests/ ├── man/ ├── DESCRIPTION ├── NAMESPACE └── ..."},{"path":[]},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"pascal-to-r-interface","dir":"Articles","previous_headings":"How Lifelihood Works > Integration with Pascal Code","what":"Pascal to R Interface","title":"Overview of Lifelihood (for developers)","text":"core calculations Lifelihood implemented Pascal optimize computational efficiency. ’s R Pascal components interact. Pascal program requires two different input txt files: configuration data file, example file. parameter boundaries file specifying range parameter, like example file. program outputs results file containing estimates, likelihoods, etc. example output format can found . Since program runs via command line, Lifelihood simplifies process managing steps. Lifelihood accepts large set arguments, generates necessary txt input files, passes program, reads output, formats .","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/articles/overview.html","id":"pascal-code","dir":"Articles","previous_headings":"How Lifelihood Works > Integration with Pascal Code","what":"Pascal Code","title":"Overview of Lifelihood (for developers)","text":"Unlike R, Pascal compiled programming language, meaning code must first compiled machine-readable format (binary) execution. Additionally, must compiled separately macOS Windows systems. src/ directory includes source (.pas) compiled files: lifelihoodC2023 Unix systems (macOS) lifelihoodC2023.exe Windows utility function Lifelihood determines user’s operating system run appropriate executable. Pascal program uses Lazarus, supports cross-platform compilation, simplifying process building code macOS Windows.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Rode. Author, maintainer. Thomas Lenormand. Author.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rode N, Lenormand T (2024). lifelihood: Package Estimates Likelihood Individual's Life History. R package version 0.0.0.9, https://nrode.github.io/Lifelihood/.","code":"@Manual{,   title = {lifelihood: This Package Estimates The Likelihood Of An Individual's Life History},   author = {Nicolas Rode and Thomas Lenormand},   year = {2024},   note = {R package version 0.0.0.9},   url = {https://nrode.github.io/Lifelihood/}, }"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"This Package Estimates The Likelihood Of An Individual's Life History","text":"lifelihood class continuous time multi-event models provide joined likelihood events individual life-history (time maturity, reproductive events, death).","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"This Package Estimates The Likelihood Of An Individual's Life History","text":"","code":"df <- read.csv(here::here(\"data/fake_sample.csv\")) head(df) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno)  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   seeds = c(1, 2, 3, 4) ) summary(results)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/R_to_lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R formula to lifelihood formula — R_to_lifelihood","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"Transforms character string describing covariates included format compiled program can understand. example, \"geno + type\" become 1 2 \"geno\" first element covariables \"type\" second. function used create model part input text file.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"","code":"R_to_lifelihood(R_format, covariates)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"R_format String representing covariates adjusted. example, \"geno + type\" use covariates geno type. covariates Vector containing names covariates.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"formatted format lifelihood understand parameter fit.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/R_to_lifelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R formula to lifelihood formula — R_to_lifelihood","text":"","code":"R_to_lifelihood(\"geno + type\", c(\"geno\", \"type\")) #> [1] \"0 1 2\" \"2\"     R_to_lifelihood(\"geno + type + geno*type\", c(\"geno\", \"type\")) #> [1] \"0 1 2 12\" \"3\""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/SurvWei.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull survival function — SurvWei","title":"Weibull survival function — SurvWei","text":"Weibull survival function","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/SurvWei.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull survival function — SurvWei","text":"","code":"SurvWei(t, ExpLong, Shape)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/SurvWei.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull survival function — SurvWei","text":"t Numeric. time event ExpLong Numeric. expected longevity Shape Numeric. shape parameter","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/SurvWei.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull survival function — SurvWei","text":"Numeric. survival probability","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/check_valid_estimation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if estimation are too close from boundaries. — check_valid_estimation","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"Since parameter boundaries default_bounds_df() (customized user), function checks estimation parameter \"close\" (0.5% tolerance) one boundaries (either min max). , raises warning tries explicit. function can ignored thanks raise_estimation_warning argument (boolean) lifelihood().","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/check_valid_estimation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"","code":"check_valid_estimation(results_lifelihood)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/check_valid_estimation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if estimation are too close from boundaries. — check_valid_estimation","text":"results_lifelihood Output object lifelihood() function.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/compute_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute empirical mortality rate — compute_mortality_rate","title":"Compute empirical mortality rate — compute_mortality_rate","text":"Compute empirical mortality rate","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute empirical mortality rate — compute_mortality_rate","text":"","code":"compute_mortality_rate(   data,   start_col,   end_col,   covariates,   interval_width = 2,   max_time = NULL )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute empirical mortality rate — compute_mortality_rate","text":"data Dataframe data life history. one row per life history / observation. start_col Column name containing first date interval event determined. end_col Column name containing second date interval event determined. covariates Vector containing names covariates. interval_width Width interval compute mortality rate. max_time Maximum time compute mortality rate.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/compute_mortality_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute empirical mortality rate — compute_mortality_rate","text":"none","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/default_bounds_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataframe with default parameter boundaries — default_bounds_df","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"created lifelihoodData object lifelihoodData(), can call default_bounds_df() function generate (load) dataframe default parameter bounds. useful want customise bounds pass dataframe lifelihood() function via param_bounds_df argument (, automatically generate keep default values).","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/default_bounds_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"","code":"default_bounds_df(lifelihoodData)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/default_bounds_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"lifelihoodData lifelihoodData object created lifelihoodData().","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/default_bounds_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"dataframe default parameter boundaries.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/default_bounds_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dataframe with default parameter boundaries — default_bounds_df","text":"","code":"df <- read.csv(here::here(\"data/fake_sample.csv\")) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 mor_start mor_end #> 1           NA            NA          NA           NA       0.1       1 #> 2            4             2           4            5       9.0      10 #> 3            5            NA          NA           NA       5.0       6 #> 4            5            NA          NA           NA       5.0       6 #> 5            5            NA          NA           NA       5.0       6 #> 6           NA            NA          NA           NA       0.1       1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  bounds_df <- default_bounds_df(dataLFH) head(bounds_df) #>              param   min     max #> 1       expt_death 0.001      40 #> 2   survival_shape  0.05     500 #> 3 ratio_expt_death  0.01     100 #> 4       prob_death 1e-05 0.99999 #> 5        sex_ratio 1e-05 0.99999 #> 6    expt_maturity 0.001       8  # for example, we want to change this value bounds_df[bounds_df$name == \"increase_death_hazard\", \"max\"] <- 80  # then we pass it to lifelihood() results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   param_bounds_df = bounds_df,   raise_estimation_warning = FALSE ) #> Warning: '/Users/josephbarbier/Desktop/Lifelihood/docs/reference/lifelihood_5293_5527_6604_485_id=b69ffp' already exists"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/delink.html","id":null,"dir":"Reference","previous_headings":"","what":"Delink function — delink","title":"Delink function — delink","text":"Delink function transform parameters original scale lifelihood scale.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/delink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delink function — delink","text":"","code":"delink(obs, min_and_max)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/delink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delink function — delink","text":"obs Numeric. observed value parameter min_and_max Numeric vector length 2. minimum maximum values parameter","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/delink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delink function — delink","text":"Numeric. transformed parameter","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/detect_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the operating system of the user — detect_os","title":"Find the operating system of the user — detect_os","text":"detect_os() finds operating system name","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/detect_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the operating system of the user — detect_os","text":"","code":"detect_os()"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/detect_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the operating system of the user — detect_os","text":"String name operating system","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/execute_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution of the compiled files — execute_bin","title":"Execution of the compiled files — execute_bin","text":"Run lifelihood program console mode.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/execute_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execution of the compiled files — execute_bin","text":"","code":"execute_bin(   path_input_data,   path_param_bounds,   group_by_group,   MCMC,   interval,   SEcal,   saveprobevent,   fitness,   r,   seed1,   seed2,   seed3,   seed4,   ntr,   nst,   To,   Tf,   climbrate,   precision )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/execute_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execution of the compiled files — execute_bin","text":"path_input_data Path input text file model data fitted. path_param_bounds Path parameter boundaries text file min max boudaries parameter. group_by_group Boolean option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal TRUE, Lifelihood computes standard error parameter using Hessian matrix (output value -1 standard error computed due singularity Hessian matrix) saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seed1 First seed number used reproduce results (seed = results). seed2 Second seed number used reproduce results (seed = results). seed3 Third seed number used reproduce results (seed = results). seed4 4th seed number used reproduce results (seed = results). ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/execute_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execution of the compiled files — execute_bin","text":"NULL. function writes output file, parsed parse_output().","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_event_type.html","id":null,"dir":"Reference","previous_headings":"","what":"find event type — find_event_type","title":"find event type — find_event_type","text":"find event type","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_event_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find event type — find_event_type","text":"","code":"find_event_type(metric_name)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_event_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find event type — find_event_type","text":"metric_name Name metric","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_event_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find event type — find_event_type","text":"Event type: either \"reproduction\", \"maturity\" \"mortality\"","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_parameter_kind.html","id":null,"dir":"Reference","previous_headings":"","what":"Deducting the type of parameter from an estimate — find_parameter_kind","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"function takes estimate name input returns whether intercept coefficient/slope. element found possible match, returns error. function used add information type estimate output lifelihood() function.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_parameter_kind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"","code":"find_parameter_kind(name)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_parameter_kind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"name character string representing parameter name.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_parameter_kind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"kind parameter: either intercept coefficient/slope","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/find_parameter_kind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deducting the type of parameter from an estimate — find_parameter_kind","text":"","code":"find_parameter_kind(\"eff_expt_death_geno1\") #> [1] \"coefficient\" find_parameter_kind(\"eff_ratio_expt_death_geno1\") #> [1] \"coefficient\" find_parameter_kind(\"int_sex_ratio\") #> [1] \"intercept\""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and parse the configuration file (YAML). — format_config","title":"Read and parse the configuration file (YAML). — format_config","text":"Safely access configuration file use lifelihood. function used lifelihood() creating input text file.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and parse the configuration file (YAML). — format_config","text":"","code":"format_config(path_config, covariates)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and parse the configuration file (YAML). — format_config","text":"covariates Vector containing names covariates.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and parse the configuration file (YAML). — format_config","text":"character vector used model tag input text file.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the input data file from a dataframe — format_dataframe_to_txt","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"Takes dataframe (df argument lifelihoodData() function) apply row format_row() function create input data file.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"","code":"format_dataframe_to_txt(   df,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   matclutch,   matclutch_size,   clutchs,   death_start,   death_end,   covariates,   model_specs,   path_config,   temp_dir )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_dataframe_to_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"df Dataframe data life history. one row per life history / observation. sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. Default FALSE. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. covariates Vector containing names covariates. model_specs Vector characters name statistical law use. Must length 3 element must one \"wei\" (Weibull law), \"exp\" (Exponential law), \"gam\" (Gamma law) \"lgn\" (Log-normal law). first one used maturity, second one used clutchs third one death. path_config character string specifying file path YAML configuration file. temp_dir Name temporary directory temporary files","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a dataframe row for the input data file — format_row","title":"Format a dataframe row for the input data file — format_row","text":"Takes row dataframe input data (sex, maturity, clutch date death) interval format transform large string (required format data input file).","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a dataframe row for the input data file — format_row","text":"","code":"format_row(   row,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   covariates )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a dataframe row for the input data file — format_row","text":"row row dataframe object provided user (df argument lifelihoodData() function). sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. covariates Vector containing names covariates.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/format_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a dataframe row for the input data file — format_row","text":"string well formated row.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual life history modelling — lifelihood","title":"Individual life history modelling — lifelihood","text":"Computes joined likelihood events individual life-history (time maturity, reproductive events, death) estimates parameters model using maximum likelihood.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual life history modelling — lifelihood","text":"","code":"lifelihood(   lifelihoodData,   path_config,   param_bounds_df = NULL,   group_by_group = FALSE,   MCMC = 0,   interval = 25,   SEcal = FALSE,   saveprobevent = 0,   fitness = 0,   r = 0,   seeds = NULL,   ntr = 2,   nst = 2,   To = 50,   Tf = 1,   climbrate = 1,   precision = 0.001,   raise_estimation_warning = TRUE,   delete_temp_files = TRUE )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual life history modelling — lifelihood","text":"lifelihoodData lifelihoodData object created lifelihoodData(). path_config character string specifying file path YAML configuration file. param_bounds_df Dataframe parameter ranges/boundaries/boundaries group_by_group Boolean option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal TRUE, Lifelihood computes standard error parameter using Hessian matrix (output value -1 standard error computed due singularity Hessian matrix) saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seeds Numbers used reproduce results (seeds = results). must vector length 4. ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning raise_estimation_warning Whether raise warning estimate parameter close minimum maximum bound. Default TRUE. delete_temp_files Indicates whether temporary files deleted. TRUE default recommended.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual life history modelling — lifelihood","text":"LifelihoodResults object","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual life history modelling — lifelihood","text":"","code":"df <- read.csv(here::here(\"data/fake_sample.csv\")) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 mor_start mor_end #> 1           NA            NA          NA           NA       0.1       1 #> 2            4             2           4            5       9.0      10 #> 3            5            NA          NA           NA       5.0       6 #> 4            5            NA          NA           NA       5.0       6 #> 5            5            NA          NA           NA       5.0       6 #> 6           NA            NA          NA           NA       0.1       1 df$type <- as.factor(df$type) df$geno <- as.factor(df$geno)  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -829.0578 #>  #> Effects: #>                       name  estimation stderror         metric        kind #> 1           int_expt_death -14.9533770        0     expt_death   intercept #> 2     eff_expt_death_geno1   2.2706453        0     expt_death coefficient #> 3     eff_expt_death_type1  -9.5537176        0     expt_death coefficient #> 4     eff_expt_death_type2   0.5331565        0     expt_death coefficient #> 5       int_survival_shape  10.2879238        0 survival_shape   intercept #> 6 eff_survival_shape_geno1  -1.9396319        0 survival_shape coefficient #>       event #> 1 mortality #> 2 mortality #> 3 mortality #> 4 mortality #> 5 mortality #> 6 mortality #>"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihoodData.html","id":null,"dir":"Reference","previous_headings":"","what":"Data object for lifelihood — lifelihoodData","title":"Data object for lifelihood — lifelihoodData","text":"Creates lifelihoodData object, list containing information needed run lifelihood program given dataset individual life history. function mainly used pass lifelihood() customizing parameter boundaries (default_bounds_df).","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihoodData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data object for lifelihood — lifelihoodData","text":"","code":"lifelihoodData(   df,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   model_specs,   covariates,   matclutch = FALSE,   matclutch_size = NULL,   right_censoring_date = 1000,   critical_age = 20,   ratiomax = 10 )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihoodData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data object for lifelihood — lifelihoodData","text":"df Dataframe data life history. one row per life history / observation. sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. model_specs Vector characters name statistical law use. Must length 3 element must one \"wei\" (Weibull law), \"exp\" (Exponential law), \"gam\" (Gamma law) \"lgn\" (Log-normal law). first one used maturity, second one used clutchs third one death. covariates Vector containing names covariates. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. Default FALSE. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. right_censoring_date (CURRENTLY IGNORED) Time (integer) point subject’s data censored. means subjects experience event interest (e.g., death, failure) date, data considered censored. practice, choose value much larger maximum longevity seen data. critical_age (CURRENTLY IGNORED) Critical age (integer) life histories followed individually. ratiomax (CURRENTLY IGNORED) Maximum ratio (integer) number offspring last first reproduction events. greater ratiomax.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihoodData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data object for lifelihood — lifelihoodData","text":"lifelihoodData object","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/lifelihoodData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data object for lifelihood — lifelihoodData","text":"","code":"df <- read.csv(here::here(\"data/fake_sample.csv\")) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 mor_start mor_end #> 1           NA            NA          NA           NA       0.1       1 #> 2            4             2           4            5       9.0      10 #> 3            5            NA          NA           NA       5.0       6 #> 4            5            NA          NA           NA       5.0       6 #> 5            5            NA          NA           NA       5.0       6 #> 6           NA            NA          NA           NA       0.1       1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  summary(data) #> Error in object[[i]]: object of type 'closure' is not subsettable"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link function — link","title":"Link function — link","text":"Link function transform parameters lifelihood scale original scale","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link function — link","text":"","code":"link(estimate, min_and_max)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link function — link","text":"estimate Numeric. estimate parameter min_and_max Numeric vector length 2. minimum maximum values parameter","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Link function — link","text":"Numeric. transformed parameter","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/make_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the design matrix — make_design_matrix","title":"Make the design matrix — make_design_matrix","text":"Create design matrix expected death survival shape.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/make_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the design matrix — make_design_matrix","text":"","code":"make_design_matrix(covariates, data)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/map_metric_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate the parameter name with the associated metric — map_metric_name","title":"Associate the parameter name with the associated metric — map_metric_name","text":"function takes name input returns match predefined list. element found match, error generated. function used determine metric parameter estimate based .","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/map_metric_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate the parameter name with the associated metric — map_metric_name","text":"","code":"map_metric_name(name)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/map_metric_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate the parameter name with the associated metric — map_metric_name","text":"name character string representing element mapped.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/map_metric_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associate the parameter name with the associated metric — map_metric_name","text":"named list containing mapped value input element.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/map_metric_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate the parameter name with the associated metric — map_metric_name","text":"","code":"map_metric_name(\"eff_expt_death_geno1\") #> [1] \"expt_death\" map_metric_name(\"eff_ratio_expt_death_geno1\") #> [1] \"ratio_expt_death\" map_metric_name(\"int_sex_ratio\") #> [1] \"sex_ratio\""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/parse_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing functions used to read the output file of the program — parse_output","title":"Parsing functions used to read the output file of the program — parse_output","text":"Find specific result output file lifelihood program, according element argument. function aggregator get_*() functions described .","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/parse_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing functions used to read the output file of the program — parse_output","text":"","code":"parse_output(lines, element, group_by_group = FALSE)  get_seeds(lines, group_by_group = FALSE)  get_likelihood(lines, group_by_group = FALSE)  get_param_ranges(lines)  get_ratio_max(lines)  get_effects(lines, group_by_group = FALSE)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/parse_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing functions used to read the output file of the program — parse_output","text":"lines Vector output file (.), element line file. element Name result parse. Must one 'seeds', 'likelihood', 'effects', 'parameter_ranges', 'ratio_max'. group_by_group Boolean indicating whether parsing performed group group (FALSE default). argument necessary structure output file different depending whether analysis carried \"group group\" (analysis method used different, certain parsers).","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/parse_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing functions used to read the output file of the program — parse_output","text":"parsed element","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and visualize predicted mortality rate — plot_mortality_rate","title":"Compute and visualize predicted mortality rate — plot_mortality_rate","text":"Simple plot predicted mortality rate. access values, use output pred_mortality_rate().","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and visualize predicted mortality rate — plot_mortality_rate","text":"","code":"plot_mortality_rate(   results_lifelihood,   newdata,   intervals,   use_log_x = FALSE,   use_log_y = FALSE )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and visualize predicted mortality rate — plot_mortality_rate","text":"results_lifelihood Output object lifelihood() function. newdata Dataframe values covariates predict mortality rate intervals Vector intervals (x-axis, unit data) compute mortality rate use_log_x Boolean use log scale x-axis (default: FALSE) use_log_y Boolean use log scale y-axis (default: FALSE)","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate_emp.html","id":null,"dir":"Reference","previous_headings":"","what":"Display evolution of mortality rate — plot_mortality_rate_emp","title":"Display evolution of mortality rate — plot_mortality_rate_emp","text":"Display evolution mortality rate","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate_emp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display evolution of mortality rate — plot_mortality_rate_emp","text":"","code":"plot_mortality_rate_emp(   data,   start_col,   end_col,   covariates,   interval_width = 2,   max_time = NULL )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/plot_mortality_rate_emp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display evolution of mortality rate — plot_mortality_rate_emp","text":"none","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/pred_mortality_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and visualize predicted mortality rate — pred_mortality_rate","title":"Compute and visualize predicted mortality rate — pred_mortality_rate","text":"Compute predicted mortality rate using fitted values expected death survival shape.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/pred_mortality_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and visualize predicted mortality rate — pred_mortality_rate","text":"","code":"pred_mortality_rate(results_lifelihood, newdata, intervals)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/pred_mortality_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and visualize predicted mortality rate — pred_mortality_rate","text":"results_lifelihood Output object lifelihood() function. newdata Dataframe values covariates predict mortality rate intervals Vector intervals (x-axis, unit data) compute mortality rate","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction with lifelihood — predict","title":"Prediction with lifelihood — predict","text":"Prediction lifelihood","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction with lifelihood — predict","text":"","code":"# S3 method for LifelihoodResults predict(   lifelihoodResults,   metric_name,   newdata = NULL,   type = c(\"link\", \"response\"),   se.fit = FALSE )"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction with lifelihood — predict","text":"newdata jeu de données avec une ou plusieurs lignes à prédire, avec les mêmes nom de variables. Si facteur, il faut les mêmes les niveaux de facteurs (renvoyer erreur si inconnu: pas présent de base dans les données d'entrainement/initiales). type Si \"link\": format de lifelihood, si \"response\": format original.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction with lifelihood — predict","text":"prediction","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Read formula from config file — read_formula","title":"Read formula from config file — read_formula","text":"Read formula config file","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read formula from config file — read_formula","text":"","code":"read_formula(config, metric)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read formula from config file — read_formula","text":"metric name metric","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read formula from config file — read_formula","text":"Formula","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_output_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and format the output file of the program — read_output_from_file","title":"Read and format the output file of the program — read_output_from_file","text":"Takes file path output file read results using parsers parse_output().","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_output_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and format the output file of the program — read_output_from_file","text":"","code":"read_output_from_file(file_path, group_by_group = FALSE, covariates = NULL)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_output_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and format the output file of the program — read_output_from_file","text":"file_path Location output file program group_by_group Boolean option fit full factorail model interactions factors","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/read_output_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and format the output file of the program — read_output_from_file","text":"object class LifelihoodResults results output file","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/safe_access.html","id":null,"dir":"Reference","previous_headings":"","what":"safe access — safe_access","title":"safe access — safe_access","text":"Safely access elements config file. function exists yaml.load_file() returns NULL value found instead raising error.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/safe_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"safe access — safe_access","text":"","code":"safe_access(config, path)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/safe_access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"safe access — safe_access","text":"config configuration object path event metric read","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/safe_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"safe access — safe_access","text":"read value","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary function to be used with the output of lifelihood() — summary","title":"Summary function to be used with the output of lifelihood() — summary","text":"Display main results lifelihood program.","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary function to be used with the output of lifelihood() — summary","text":"","code":"# S3 method for LifelihoodResults summary(object, ...)"},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary function to be used with the output of lifelihood() — summary","text":"object LifelihoodResults object lifelihood()","code":""},{"path":"https://josephbarbierdarnal.github.io/Lifelihood/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary function to be used with the output of lifelihood() — summary","text":"","code":"df <- read.csv(here::here(\"data/fake_sample.csv\")) df$type <- as.factor(df$type) df$geno <- as.factor(df$geno) head(df) #>   type geno sex_start sex_end sex mat_start mat_end clutch_start1 clutch_end1 #> 1    1    0         0    1000   0         0    1000            NA          NA #> 2    2    0         0    1000   0         2       3             4           3 #> 3    0    1         0    1000   0         3       4             2           4 #> 4    0    1         0    1000   0         3       4             2           4 #> 5    0    1         0    1000   0         3       4             2           4 #> 6    1    0         0    1000   0         0    1000            NA          NA #>   clutch_size1 clutch_start2 clutch_end2 clutch_size2 mor_start mor_end #> 1           NA            NA          NA           NA       0.1       1 #> 2            4             2           4            5       9.0      10 #> 3            5            NA          NA           NA       5.0       6 #> 4            5            NA          NA           NA       5.0       6 #> 5            5            NA          NA           NA       5.0       6 #> 6           NA            NA          NA           NA       0.1       1  clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  dataLFH <- lifelihoodData(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   model_specs = c(\"gam\", \"lgn\", \"wei\") )  results <- lifelihood(   lifelihoodData = dataLFH,   path_config = here::here(\"config.yaml\"),   seeds = c(1, 2, 3, 4),   raise_estimation_warning = FALSE ) summary(results) #> LIFELIHOOD RESULTS #>  #> Likelihood: #> [1] -829.0578 #>  #> Effects: #>                       name  estimation stderror         metric        kind #> 1           int_expt_death -14.9533770        0     expt_death   intercept #> 2     eff_expt_death_geno1   2.2706453        0     expt_death coefficient #> 3     eff_expt_death_type1  -9.5537176        0     expt_death coefficient #> 4     eff_expt_death_type2   0.5331565        0     expt_death coefficient #> 5       int_survival_shape  10.2879238        0 survival_shape   intercept #> 6 eff_survival_shape_geno1  -1.9396319        0 survival_shape coefficient #>       event #> 1 mortality #> 2 mortality #> 3 mortality #> 4 mortality #> 5 mortality #> 6 mortality #>"}]
