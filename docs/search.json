[{"path":"/articles/1-required-data-format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1 - What is the required data format","text":"life history data nature heterogeneous observations sample, format data required can somewhat tricky. hood, lifelihood creates text file containing data (parameters), use file (core) source code. Fortunately, lifelihood automatically transform dataframe text file right format. vignette, ’ll look dataframe containing data needs formatted Lifelihood programme work properly.","code":""},{"path":"/articles/1-required-data-format.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"1 - What is the required data format","text":"Let’s create simple dataset just 7 observations following columns: sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. extra1 Column name first column add input data file extra2 Column name second column add input data file extra3 Column name third column add input data file can see, observations made ponts, leading presence NULL values. One row dataset represent life history one observation. dataframe right format, now create configuration file.","code":"df <- data.frame(   geno = c(1, 3, 1, 0, 2, 0, 1),   sex = c(0, 0, 0, 0, 0, 0, 0),   sex_start = c(1, 3, 2, 10, 3, 4, 5),   sex_end = c(2, 4, 3, 11, 4, 5, 6),   mat_start = c(2, 1, 0, 1, 0, 2, 1),   mat_end = c(4, 2, 1000, 2, 1000, 3, 2),   clutch_start1 = c(3, 2, NA, 2, NA, 3, 2),   clutch_end1 = c(4, 3, NA, 3, NA, 4, 3),   clutch_size1 = c(4, 6, NA, 5, NA, 2, 30),   clutch_start2 = c(5, NA, NA, 5, NA, 4, 3),   clutch_end2 = c(6, NA, NA, 6, NA, 5, 4),   clutch_size2 = c(5, NA, NA, 7, NA, 10, 5),   clutch_start3 = c(7, NA, NA, 6, NA, NA, 5),   clutch_end3 = c(8, NA, NA, 7, NA, NA, 6),   clutch_size3 = c(1, NA, NA, 1, NA, NA, 2),   mor_start = c(8, 11, 0, 11, 0, 7, 9),   mor_end = c(12, 11, 1, 12, 1, 8, 10) )"},{"path":"/articles/1_required_data_format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"What is the required data format?","text":"life history data nature heterogeneous observations sample, format data required can somewhat tricky. hood, lifelihood creates text file containing data (parameters), use file (core) source code. Fortunately, lifelihood automatically transform dataframe text file right format. vignette, ’ll look dataframe containing data needs formatted Lifelihood programme work properly.","code":""},{"path":"/articles/1_required_data_format.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"What is the required data format?","text":"order work properly, requires specific format. Let’s create simple dataset just 7 observations following columns: sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. extra1 Column name first column add input data file extra2 Column name second column add input data file extra3 Column name third column add input data file can see, observations made ponts, leading presence NULL values. One row dataset represent life history one observation. TODO: finish vignette","code":"df <- data.frame(   geno = c(1, 3, 1, 0, 2, 0, 1),   sex = c(0, 0, 0, 0, 0, 0, 0),   sex_start = c(1, 3, 2, 10, 3, 4, 5),   sex_end = c(2, 4, 3, 11, 4, 5, 6),   mat_start = c(2, 1, 0, 1, 0, 2, 1),   mat_end = c(4, 2, 1000, 2, 1000, 3, 2),   clutch_start1 = c(3, 2, NA, 2, NA, 3, 2),   clutch_end1 = c(4, 3, NA, 3, NA, 4, 3),   clutch_size1 = c(4, 6, NA, 5, NA, 2, 30),   clutch_start2 = c(5, NA, NA, 5, NA, 4, 3),   clutch_end2 = c(6, NA, NA, 6, NA, 5, 4),   clutch_size2 = c(5, NA, NA, 7, NA, 10, 5),   clutch_start3 = c(7, NA, NA, 6, NA, NA, 5),   clutch_end3 = c(8, NA, NA, 7, NA, NA, 6),   clutch_size3 = c(1, NA, NA, 1, NA, NA, 2),   mor_start = c(8, 11, 0, 11, 0, 7, 9),   mor_end = c(12, 11, 1, 12, 1, 8, 10) )"},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2 - Setting up the configuration file","text":"Since lifelihood allows large number combinations parameters estimate given dataset, makes easier separate configuration file specify want fit. hood, program use file estimate specified returns estimations. needed configuration file must YAML format, convenient kind file easy read (humans) parse (program). relies indentation represent structure. Learn YAML.","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"parameters","dir":"Articles","previous_headings":"","what":"Parameters","title":"2 - Setting up the configuration file","text":"2 main sections required YAML configuration file: constants: fixed parameters, set design mortality: parameters related mortality maturity: parameters related maturity reproduction: parameters related reproduction","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"constants","dir":"Articles","previous_headings":"Parameters","what":"Constants","title":"2 - Setting up the configuration file","text":"right_censoring_date (integer): time point subject’s data censored. means subjects experience event interest (e.g., death, failure) date, data considered censored. practice, choose value much larger maximum longevity seen data. critical_age (integer): critical age life histories followed individually. ratiomax (integer): maximum ratio number offspring last first reproduction events. greater ratiomax.","code":""},{"path":[]},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"possible-values","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Possible values","title":"2 - Setting up the configuration file","text":"Assuming 2 covariables dataset (named covar1 covar2), estimation parameters, following values possible: not_fitted: estimate parameter. 1: fit intercept. 1 + covar1: fit intercept parameter covar1. 1 + covar1 + covar2: fit intercept, parameter covar1 parameter covar1. 1 + covar1 + covar2 + covar1*covar2: fit intercept, parameter covar1, parameter covar1 interaction covar1 covar2. Note: covar1 covar2 arbitrary names. rule name one columns dataset.","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"mortality","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Mortality","title":"2 - Setting up the configuration file","text":"expt_death: Expected time death survival_shape: Survival shape parameter ratio_expt_death: Ratio expected time death male vs expected time death female prob_death: Probability death critical time sex_ratio: Sex ratio","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"maturity","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Maturity","title":"2 - Setting up the configuration file","text":"expt_maturity: Expected time maturity maturity_shape: Maturity shape parameter ratio_expt_maturity: Ratio expected time maturity male expected time maturity female","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"reproduction","dir":"Articles","previous_headings":"Parameters > Estimations","what":"Reproduction","title":"2 - Setting up the configuration file","text":"expt_reproduction: Expected time next reproduction reproduction_shape: Reproduction shape parameter n_offspring: Number offsprings per reproduction event fitness increase_death_hazard: Increase death hazard following reproduction event tof_reduction_date: Trade-reduction date increase_tof_n_offspring: Increase trade-proportional number offspring lin_decrease_hazard: Linear decrease hazard rate time since maturity quad_senescence: Quadratic senescence interval reproduction events quad_decrease_hazard: Quadratic decrease hazard rate time since maturity lin_change_n_offspring: Linear change number offspring time since maturity quad_change_n_offspring: Quadratic change number offsprings time since maturity tof_n_offspring: Trade-previous reproductive interval current number offspring","code":""},{"path":"/articles/2-setting-up-the-configuration-file.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"2 - Setting up the configuration file","text":"next step actually use package.","code":"--- constants:   right_censoring_date: 1000   critical_age: 20   ratiomax: 10 estimations:   mortality:     expt_death: geno     survival_shape: geno + type + geno*type     ratio_expt_death: geno     prob_death: geno     sex_ratio: not_fitted   maturity:     expt_maturity: geno + type     maturity_shape: geno     ratio_expt_maturity: geno + type   reproduction:     expt_reproduction: geno     reproduction_shape: not_fitted     n_offspring: geno     increase_death_hazard: geno + type + geno*type     tof_reduction_date: geno     increase_tof_n_offspring: geno     lin_decrease_hazard: geno + type + geno*type     quad_senescence: geno     quad_decrease_hazard: geno     lin_change_n_offspring: geno     quad_change_n_offspring: geno     tof_n_offspring: not_fitted"},{"path":"/articles/2_how_to_use_lifelihood.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"How to use the lifelihood package","text":"","code":"library(lifelihood)"},{"path":"/articles/2_how_to_use_lifelihood.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"How to use the lifelihood package","text":"haven’t already check , look required data format work lifelihood? Load dataset .csv file: Prepare input parameters lifelihood() function:","code":"# input data df <- read.csv(here::here('data/fake_sample.csv')) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  # seeds value (must of length 4!) seeds <- c(1, 2, 3, 4)"},{"path":[]},{"path":"/articles/2_how_to_use_lifelihood.html","id":"all-default-parameters","dir":"Articles","previous_headings":"Get the results","what":"All default parameters","title":"How to use the lifelihood package","text":"","code":"# run the analysis results <- lifelihood(   df = df,   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   extra1 = \"geno\",   seeds = seeds,   matclutch = FALSE,   models = c(\"gam\", \"lgn\", \"wei\") ) ## Using default parameter ranges/boundaries summary(results) ## LIFELIHOODIZATION ##  ## seeds: ## [1] 1 2 3 4 ##  ## likelihood: ## [1] -1937.531 ##  ## effects: ##            Name     Value1 Value2 ## 1 int_E(tmort)f -0.5317772      0 ## 2     int_morta -2.2130453      0 ## 3  int_E(tmat)f -3.6741016      0 ## 4      int_mata -6.3462724      0 ## 5   int_E(tpon)  1.5767529      0 ## 6     int_ponta -3.9144522      0 ## 7     int_pontn -2.4247010      0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 302.00000 ## 2       morta  1e-03  20.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  15.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -8e+00  10.00000 ## 18  sen(pn)t2 -8e+00  10.00000 ## 19   to(pupn) -8e+00  10.00000 ##  ## ratiomax: ## [1] 10"},{"path":"/articles/2_how_to_use_lifelihood.html","id":"with-custom-parameter-ranges","dir":"Articles","previous_headings":"Get the results","what":"With custom parameter ranges","title":"How to use the lifelihood package","text":"","code":"# dataframe with param ranges param_ranges <- data.frame(   param = c(\"E(tmort)f\", \"morta\", \"RE(tmort)m\", \"mortp\", \"propmal\", \"E(tmat)f\", \"mata\",              \"RE(tmat)m\", \"E(tpon)\", \"ponta\", \"pontn\", \"to(ps)int\", \"to(ps)am\", \"to(ps)tp\",              \"sen(pu)t\", \"sen(pu)t2\", \"sen(pn)t\", \"sen(pn)t2\", \"to(pupn)\", \"W\"),   min = c(1, 0.001, 0.1, 0.0001, 0.00001, 1, 0.0001, 0.1, 0.1, 0.001, 1, 0.00001,            0.0000001, 0.0000001, -20, -20, -8, -8, -8, 0.001),   max = c(301, 20, 4, 1, 0.99999, 100, 15, 10, 200, 12, 50, 10, 10, 10, 20, 20, 10, 10, 10, 1200) ) ## LIFELIHOODIZATION ##  ## seeds: ## [1] 1 2 3 4 ##  ## likelihood: ## [1] -1937.531 ##  ## effects: ##            Name     Value1 Value2 ## 1 int_E(tmort)f -0.5317772      0 ## 2     int_morta -2.2130453      0 ## 3  int_E(tmat)f -3.6741016      0 ## 4      int_mata -6.3462724      0 ## 5   int_E(tpon)  1.5767529      0 ## 6     int_ponta -3.9144522      0 ## 7     int_pontn -2.4247010      0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 302.00000 ## 2       morta  1e-03  20.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  15.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -8e+00  10.00000 ## 18  sen(pn)t2 -8e+00  10.00000 ## 19   to(pupn) -8e+00  10.00000 ##  ## ratiomax: ## [1] 10"},{"path":"/articles/2_how_to_use_lifelihood.html","id":"get-specific-results","dir":"Articles","previous_headings":"","what":"Get specific results","title":"How to use the lifelihood package","text":"","code":"results$effects$Value1 ## [1] -0.5317772 -2.2130453 -3.6741016 -6.3462724  1.5767529 -3.9144522 -2.4247010"},{"path":"/articles/3-how-to-use-lifelihood.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"3 - How to use the lifelihood package","text":"","code":"library(lifelihood)"},{"path":"/articles/3-how-to-use-lifelihood.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"3 - How to use the lifelihood package","text":"Load dataset .csv file: Prepare input parameters lifelihood() function:","code":"# input data df <- read.csv(here::here('data/fake_sample.csv')) # name of the columns of the clutchs into a single vector clutchs <- c(   \"clutch_start1\", \"clutch_end1\", \"clutch_size1\",   \"clutch_start2\", \"clutch_end2\", \"clutch_size2\" )  # seeds value (must of length 4!) seeds <- c(1, 2, 3, 4)"},{"path":[]},{"path":"/articles/3-how-to-use-lifelihood.html","id":"all-default-parameters","dir":"Articles","previous_headings":"Get the results","what":"All default parameters","title":"3 - How to use the lifelihood package","text":"","code":"# run the analysis results <- lifelihood(   df = df,   path_config = \"../config.yaml\",   sex = \"sex\",   sex_start = \"sex_start\",   sex_end = \"sex_end\",   maturity_start = \"mat_start\",   maturity_end = \"mat_end\",   clutchs = clutchs,   death_start = \"mor_start\",   death_end = \"mor_end\",   covariates = c(\"geno\", \"type\"),   seeds = seeds,   matclutch = FALSE,   models = c(\"gam\", \"lgn\", \"wei\") ) ## Using default parameter ranges/boundaries ## [1] \"Input written.\" ## [1] \"Output read.\" summary(results) ## LIFELIHOODIZATION ##  ## seeds: ## [1] 1 2 3 4 ##  ## likelihood: ## [1] -249.1556 ##  ## effects: ##                         Name  Estimation Estimation2 ## 1              int_E(tmort)f -5.68471790           0 ## 2        eff_E(tmort)f_geno1 -1.26960545           0 ## 3                  int_morta -4.15362137           0 ## 4            eff_morta_geno1  0.61707021           0 ## 5            eff_morta_type1  0.52488676           0 ## 6            eff_morta_type2  0.52108365           0 ## 7      eff_morta_type1:geno1 -0.33400234           0 ## 8      eff_morta_type2:geno1  1.23059317           0 ## 9             int_RE(tmort)m -0.78269307           0 ## 10      eff_RE(tmort)m_geno1 -0.67261713           0 ## 11                 int_mortp -5.20828635           0 ## 12           eff_mortp_geno1  0.17961170           0 ## 13              int_E(tmat)f -2.96476600           0 ## 14        eff_E(tmat)f_geno1 -0.67992247           0 ## 15        eff_E(tmat)f_type1  0.25075784           0 ## 16        eff_E(tmat)f_type2 -1.24385410           0 ## 17                  int_mata -5.87236179           0 ## 18            eff_mata_geno1 -1.56849404           0 ## 19             int_RE(tmat)m -0.99361126           0 ## 20       eff_RE(tmat)m_geno1  0.45246592           0 ## 21       eff_RE(tmat)m_type1  2.33331404           0 ## 22       eff_RE(tmat)m_type2 -1.82042289           0 ## 23               int_E(tpon) -1.69695504           0 ## 24         eff_E(tpon)_geno1 -1.57100312           0 ## 25                 int_pontn -3.37868872           0 ## 26           eff_pontn_geno1 -0.07836192           0 ## 27             int_to(ps)int -0.95029563           0 ## 28       eff_to(ps)int_geno1  0.20598929           0 ## 29       eff_to(ps)int_type1  0.45335970           0 ## 30       eff_to(ps)int_type2  0.81656086           0 ## 31 eff_to(ps)int_type1:geno1 -0.10520391           0 ## 32 eff_to(ps)int_type2:geno1  0.04162903           0 ## 33              int_to(ps)am -1.89838349           0 ## 34        eff_to(ps)am_geno1 -0.36328803           0 ## 35              int_to(ps)tp -0.33267211           0 ## 36        eff_to(ps)tp_geno1  0.92331178           0 ## 37              int_sen(pu)t  0.66172990           0 ## 38        eff_sen(pu)t_geno1 -1.48913490           0 ## 39        eff_sen(pu)t_type1 -1.31758033           0 ## 40        eff_sen(pu)t_type2 -0.38189539           0 ## 41  eff_sen(pu)t_type1:geno1  0.14501670           0 ## 42  eff_sen(pu)t_type2:geno1  1.28961003           0 ## 43             int_sen(pu)t2  0.30847549           0 ## 44       eff_sen(pu)t2_geno1  0.72822904           0 ## 45              int_sen(pn)t  0.20601439           0 ## 46        eff_sen(pn)t_geno1 -0.32740060           0 ## 47             int_sen(pn)t2  0.19023366           0 ## 48       eff_sen(pn)t2_geno1  0.21941308           0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 201.00000 ## 2       morta  1e-03  30.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  12.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -1e+01  10.00000 ## 18  sen(pn)t2 -1e+01  10.00000 ## 19   to(pupn) -1e+01  10.00000 ##  ## ratiomax: ## [1] 10"},{"path":"/articles/3-how-to-use-lifelihood.html","id":"with-custom-parameter-ranges","dir":"Articles","previous_headings":"Get the results","what":"With custom parameter ranges","title":"3 - How to use the lifelihood package","text":"","code":"# dataframe with param ranges param_ranges <- data.frame(   param = c(\"E(tmort)f\", \"morta\", \"RE(tmort)m\", \"mortp\", \"propmal\", \"E(tmat)f\", \"mata\",              \"RE(tmat)m\", \"E(tpon)\", \"ponta\", \"pontn\", \"to(ps)int\", \"to(ps)am\", \"to(ps)tp\",              \"sen(pu)t\", \"sen(pu)t2\", \"sen(pn)t\", \"sen(pn)t2\", \"to(pupn)\", \"W\"),   min = c(1, 0.001, 0.1, 0.0001, 0.00001, 1, 0.0001, 0.1, 0.1, 0.001, 1, 0.00001,            0.0000001, 0.0000001, -20, -20, -8, -8, -8, 0.001),   max = c(301, 20, 4, 1, 0.99999, 100, 15, 10, 200, 12, 50, 10, 10, 10, 20, 20, 10, 10, 10, 1200) ) ## [1] \"Input written.\" ## [1] \"Output read.\" ## LIFELIHOODIZATION ##  ## seeds: ## [1] 1 2 3 4 ##  ## likelihood: ## [1] -249.1556 ##  ## effects: ##                         Name  Estimation Estimation2 ## 1              int_E(tmort)f -5.68471790           0 ## 2        eff_E(tmort)f_geno1 -1.26960545           0 ## 3                  int_morta -4.15362137           0 ## 4            eff_morta_geno1  0.61707021           0 ## 5            eff_morta_type1  0.52488676           0 ## 6            eff_morta_type2  0.52108365           0 ## 7      eff_morta_type1:geno1 -0.33400234           0 ## 8      eff_morta_type2:geno1  1.23059317           0 ## 9             int_RE(tmort)m -0.78269307           0 ## 10      eff_RE(tmort)m_geno1 -0.67261713           0 ## 11                 int_mortp -5.20828635           0 ## 12           eff_mortp_geno1  0.17961170           0 ## 13              int_E(tmat)f -2.96476600           0 ## 14        eff_E(tmat)f_geno1 -0.67992247           0 ## 15        eff_E(tmat)f_type1  0.25075784           0 ## 16        eff_E(tmat)f_type2 -1.24385410           0 ## 17                  int_mata -5.87236179           0 ## 18            eff_mata_geno1 -1.56849404           0 ## 19             int_RE(tmat)m -0.99361126           0 ## 20       eff_RE(tmat)m_geno1  0.45246592           0 ## 21       eff_RE(tmat)m_type1  2.33331404           0 ## 22       eff_RE(tmat)m_type2 -1.82042289           0 ## 23               int_E(tpon) -1.69695504           0 ## 24         eff_E(tpon)_geno1 -1.57100312           0 ## 25                 int_pontn -3.37868872           0 ## 26           eff_pontn_geno1 -0.07836192           0 ## 27             int_to(ps)int -0.95029563           0 ## 28       eff_to(ps)int_geno1  0.20598929           0 ## 29       eff_to(ps)int_type1  0.45335970           0 ## 30       eff_to(ps)int_type2  0.81656086           0 ## 31 eff_to(ps)int_type1:geno1 -0.10520391           0 ## 32 eff_to(ps)int_type2:geno1  0.04162903           0 ## 33              int_to(ps)am -1.89838349           0 ## 34        eff_to(ps)am_geno1 -0.36328803           0 ## 35              int_to(ps)tp -0.33267211           0 ## 36        eff_to(ps)tp_geno1  0.92331178           0 ## 37              int_sen(pu)t  0.66172990           0 ## 38        eff_sen(pu)t_geno1 -1.48913490           0 ## 39        eff_sen(pu)t_type1 -1.31758033           0 ## 40        eff_sen(pu)t_type2 -0.38189539           0 ## 41  eff_sen(pu)t_type1:geno1  0.14501670           0 ## 42  eff_sen(pu)t_type2:geno1  1.28961003           0 ## 43             int_sen(pu)t2  0.30847549           0 ## 44       eff_sen(pu)t2_geno1  0.72822904           0 ## 45              int_sen(pn)t  0.20601439           0 ## 46        eff_sen(pn)t_geno1 -0.32740060           0 ## 47             int_sen(pn)t2  0.19023366           0 ## 48       eff_sen(pn)t2_geno1  0.21941308           0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 201.00000 ## 2       morta  1e-03  30.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  12.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -1e+01  10.00000 ## 18  sen(pn)t2 -1e+01  10.00000 ## 19   to(pupn) -1e+01  10.00000 ##  ## ratiomax: ## [1] 10"},{"path":"/articles/3-how-to-use-lifelihood.html","id":"get-specific-results","dir":"Articles","previous_headings":"","what":"Get specific results","title":"3 - How to use the lifelihood package","text":"","code":"results$effects$Estimation1 ## NULL"},{"path":"/articles/how_to_use_lifelihood.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load libraries","title":"How to use the lifelihood package","text":"","code":"library(kableExtra) library(lifelihood)"},{"path":"/articles/how_to_use_lifelihood.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"How to use the lifelihood package","text":"","code":"# input data file_name <- \"DataLenski_gam_gam_gam__Rep1\" path_to_data <- here::here(\"data\", \"raw_data\", \"DataLenski\", paste0(file_name, \".txt\")) print(path_to_data) ## [1] \"/Users/josephbarbier/Desktop/Lifelihood/data/raw_data/DataLenski/DataLenski_gam_gam_gam__Rep1.txt\""},{"path":[]},{"path":"/articles/how_to_use_lifelihood.html","id":"all-default-parameters","dir":"Articles","previous_headings":"Get the results","what":"All default parameters","title":"How to use the lifelihood package","text":"","code":"# run the analysis results <- lifelihood(data_path=path_to_data) ## Using default parameter ranges/boundaries summary(results) ## LIFELIHOODIZATION ##  ## Seeds: ## [1] 12 13 14 15 ##  ## Likelihood optimum found: ## [1] -265.9992 ##  ## Effects: ##            Name    Value1 Value2 ## 1 int_E(tmort)f -3.868426      0 ## 2     int_morta -1.153408      0 ## 3  int_E(tmat)f -4.382585      0 ## 4      int_mata -4.419591      0 ## 5   int_E(tpon) -5.062727      0 ## 6     int_ponta -3.230823      0 ## 7     int_pontn -3.113569      0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 300.00000 ## 2       morta  1e-03  20.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  15.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -8e+00  10.00000 ## 18  sen(pn)t2 -8e+00  10.00000 ## 19   to(pupn) -8e+00  10.00000 ##  ## Ratio Max: ## [1] 10"},{"path":"/articles/how_to_use_lifelihood.html","id":"with-custom-parameter-ranges","dir":"Articles","previous_headings":"Get the results","what":"With custom parameter ranges","title":"How to use the lifelihood package","text":"","code":"# dataframe with param ranges param_ranges <- data.frame(   param = c(\"E(tmort)f\", \"morta\", \"RE(tmort)m\", \"mortp\", \"propmal\", \"E(tmat)f\", \"mata\",              \"RE(tmat)m\", \"E(tpon)\", \"ponta\", \"pontn\", \"to(ps)int\", \"to(ps)am\", \"to(ps)tp\",              \"sen(pu)t\", \"sen(pu)t2\", \"sen(pn)t\", \"sen(pn)t2\", \"to(pupn)\", \"W\"),   min = c(1, 0.001, 0.1, 0.0001, 0.00001, 1, 0.0001, 0.1, 0.1, 0.001, 1, 0.00001,            0.0000001, 0.0000001, -20, -20, -8, -8, -8, 0.001),   max = c(300, 20, 4, 1, 0.99999, 100, 15, 10, 200, 12, 50, 10, 10, 10, 20, 20, 10, 10, 10, 1200) ) kable(param_ranges) # run the analysis results <- lifelihood(data_path=path_to_data, param_range_df=param_ranges) summary(results) ## LIFELIHOODIZATION ##  ## Seeds: ## [1] 12 13 14 15 ##  ## Likelihood optimum found: ## [1] -265.9992 ##  ## Effects: ##            Name    Value1 Value2 ## 1 int_E(tmort)f -3.868426      0 ## 2     int_morta -1.153408      0 ## 3  int_E(tmat)f -4.382585      0 ## 4      int_mata -4.419591      0 ## 5   int_E(tpon) -5.062727      0 ## 6     int_ponta -3.230823      0 ## 7     int_pontn -3.113569      0 ##  ## parameter ranges/boundaries: ##          Name    Min       Max ## 1   E(tmort)f  1e+00 300.00000 ## 2       morta  1e-03  20.00000 ## 3  RE(tmort)m  1e-01   4.00000 ## 4       mortp  1e-04   1.00000 ## 5     propmal  1e-05   0.99999 ## 6    E(tmat)f  1e+00 100.00000 ## 7        mata  1e-04  15.00000 ## 8   RE(tmat)m  1e-01  10.00000 ## 9     E(tpon)  1e-01 200.00000 ## 10      ponta  1e-03  12.00000 ## 11      pontn  1e+00  50.00000 ## 12  to(ps)int  1e-05  10.00000 ## 13   to(ps)am  1e-07  10.00000 ## 14   to(ps)tp  1e-07  10.00000 ## 15   sen(pu)t -2e+01  20.00000 ## 16  sen(pu)t2 -2e+01  20.00000 ## 17   sen(pn)t -8e+00  10.00000 ## 18  sen(pn)t2 -8e+00  10.00000 ## 19   to(pupn) -8e+00  10.00000 ##  ## Ratio Max: ## [1] 10"},{"path":"/articles/required_data_format.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"What is the required data format?","text":"life history data nature heterogeneous observations sample, format data required can somewhat tricky. hood, lifelihood creates text file containing data (parameters), use file (core) source code. Fortunately, lifelihood automatically transform dataframe text file right format. vignette, ’ll look dataframe containing data needs formatted Lifelihood programme work properly.","code":""},{"path":"/articles/required_data_format.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"What is the required data format?","text":"order work properly, requires specific format. Let’s create simple dataset just 7 observations: geno simple categorical variable sex (pseudo-) boolean 0 1 mat_start mat_end designate interval maturity occured pon_start1 pon_end1 designate interval 1st pont pon_start2 pon_end2 designate interval 2nd pont etc potential ponts mor_start mor_end designate interval death occured can see, observations made ponts, leading presence NULL values. One row dataset represent life history one observation. TODO: finish vignette","code":"df <- data.frame(   geno = c(1, 2, 1, 0, 2, 0, 1),   sex = c(0, 0, 0, 0, 0, 0, 0),   mat_start = c(2, 1, 0, 1, 0, 2, 1),   mat_end = c(3, 2, 1000, 2, 1000, 3, 2),   pon_start1 = c(3, 2, NA, 2, NA, 3, 2),   pon_end1 = c(4, 3, NA, 3, NA, 4, 3),   pon_size1 = c(4, 6, NA, 5, NA, 2, 7),   pon_start2 = c(5, NA, NA, 5, NA, 4, 3),   pon_end2 = c(6, NA, NA, 6, NA, 5, 4),   pon_size2 = c(5, NA, NA, 5, NA, 3, 5),   pon_start3 = c(7, NA, NA, 6, NA, NA, 5),   pon_end3 = c(8, NA, NA, 7, NA, NA, 6),   pon_size3 = c(1, NA, NA, 1, NA, NA, 2),   mor_start = c(8, 11, 0, 11, 0, 7, 9),   mor_end = c(9, 12, 1, 12, 1, 8, 10) ) kableExtra::kable(df)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Rode. Author, maintainer. Thomas Lenormand. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rode N, Lenormand T (2024). lifelihood: Package Estimates Likelihood Individual's Life History. R package version 0.0.0.9000.","code":"@Manual{,   title = {lifelihood: This Package Estimates The Likelihood Of An Individual's Life History},   author = {Nicolas Rode and Thomas Lenormand},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"lifelihood","dir":"","previous_headings":"","what":"lifelihood","title":"This Package Estimates The Likelihood Of An Individual's Life History","text":"Lifelihood class continuous time multi-event models provide joined likelihood events individual life-history (time maturity, reproductive events, death).","code":""},{"path":"/reference/R_to_lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert model description to lifelihod format — R_to_lifelihood","title":"Convert model description to lifelihod format — R_to_lifelihood","text":"(internal function) Function transforms character string describing covariates included format compiled program can understand. example, \"geno + type\" become 1 2 \"geno\" first element covariables \"type\" second. function used create model part input file.","code":""},{"path":"/reference/R_to_lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert model description to lifelihod format — R_to_lifelihood","text":"","code":"R_to_lifelihood(R_format, covariates)"},{"path":"/reference/R_to_lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert model description to lifelihod format — R_to_lifelihood","text":"R_format String representing covariates adjusted. example, \"geno + type\" use covariates geno type. covariates Vector containing names covariates.","code":""},{"path":"/reference/delete_param_range.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Delete parameter ranges/boundaries file — delete_param_range","title":"(internal function) Delete parameter ranges/boundaries file — delete_param_range","text":"(internal function) delete_param_range() takes path parameter ranges/boundaries file delete ","code":""},{"path":"/reference/delete_param_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Delete parameter ranges/boundaries file — delete_param_range","text":"","code":"delete_param_range(file_path)"},{"path":"/reference/delete_param_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Delete parameter ranges/boundaries file — delete_param_range","text":"file_path Path .txt file ","code":""},{"path":"/reference/detect_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the operating system of the user — detect_os","title":"Find the operating system of the user — detect_os","text":"detect_os() finds operating system name","code":""},{"path":"/reference/detect_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the operating system of the user — detect_os","text":"","code":"detect_os()"},{"path":"/reference/detect_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the operating system of the user — detect_os","text":"String name operating system","code":""},{"path":"/reference/execute_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Execution of the compiled files — execute_bin","title":"(internal function) Execution of the compiled files — execute_bin","text":"(internal function) Run lifelihood program console mode","code":""},{"path":"/reference/execute_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Execution of the compiled files — execute_bin","text":"","code":"execute_bin(   input_file,   custom_file,   group_by_group = 0,   MCMC = 0,   interval = 25,   SEcal = 0,   saveprobevent = 0,   fitness = 0,   r = 0,   seed1 = 12,   seed2 = 13,   seed3 = 14,   seed4 = 15,   ntr = 2,   nst = 2,   To = 50,   Tf = 1,   climbrate = 1,   precision = 0.001 )"},{"path":"/reference/execute_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Execution of the compiled files — execute_bin","text":"MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal Compute standard error eahc parameter using Hessian matrix saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seed1 First seed used random values can found seed2 Second seed used random values can found seed3 Third seed used random values can found seed4 Fourth seed used random values can found ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning infile File model data fitted customfile File min max boudaries parameter GbyG Option fit full factorail model interactions factors","code":""},{"path":"/reference/execute_bin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(internal function) Execution of the compiled files — execute_bin","text":"Execute compiled files lifelihood program","code":""},{"path":"/reference/format_config.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Read the configuration file and format it for the input file. — format_config","title":"(internal function) Read the configuration file and format it for the input file. — format_config","text":"Use configuration file create well formatted vector strings put \"modele\" input file, excluding distribution law.","code":""},{"path":"/reference/format_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Read the configuration file and format it for the input file. — format_config","text":"","code":"format_config(path_config, covariates)"},{"path":"/reference/format_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Read the configuration file and format it for the input file. — format_config","text":"path_config Location configuration file covariates Vector containing names covariates","code":""},{"path":"/reference/format_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Read the configuration file and format it for the input file. — format_config","text":"Vector string add input file","code":""},{"path":"/reference/format_dataframe_to_txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the input data file from a dataframe — format_dataframe_to_txt","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"Takes dataframe (df argument lifelihood() function) apply row format_row() function create input data file.","code":""},{"path":"/reference/format_dataframe_to_txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"","code":"format_dataframe_to_txt(   df,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   matclutch,   matclutch_size,   clutchs,   death_start,   death_end,   covariates,   models,   path_config )"},{"path":"/reference/format_dataframe_to_txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the input data file from a dataframe — format_dataframe_to_txt","text":"df dataframe object input data. sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. clutchs Vector containing names clutch columns. order : first date first clutch second date first clutch clutch size first clutch second clutch first date first clutch second date second clutch clutch size . observation clutches example 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. covariates Vector containing names covariates. models Vector characters name statistical law use. Must length 3 element must \"wei\", \"gam\" \"lgn\". first one used maturity, second one used clutchs third one death. path_config Path configuration file (YAML).","code":""},{"path":"/reference/format_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a dataframe row for the input data file — format_row","title":"Format a dataframe row for the input data file — format_row","text":"(internal function) Takes row dataframe input data (sex, maturity, clutch date death) interval format transform large string (required format data input file).","code":""},{"path":"/reference/format_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a dataframe row for the input data file — format_row","text":"","code":"format_row(   row,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   covariates )"},{"path":"/reference/format_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a dataframe row for the input data file — format_row","text":"row row dataframe object provided user (df argument lifelihood() function).","code":""},{"path":"/reference/format_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a dataframe row for the input data file — format_row","text":"string well formated row.","code":""},{"path":"/reference/get_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Get the estimation in the output file — get_effects","title":"(internal function) Get the estimation in the output file — get_effects","text":"(internal function) Find estimated effects output file lifelihood program","code":""},{"path":"/reference/get_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Get the estimation in the output file — get_effects","text":"","code":"get_effects(lines, group_by_group = FALSE)"},{"path":"/reference/get_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Get the estimation in the output file — get_effects","text":"lines Vector output file, element line file group_by_group Boolean indicating whether analysis made group group (default false)","code":""},{"path":"/reference/get_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Get the estimation in the output file — get_effects","text":"dataframe parsed effects estimation","code":""},{"path":"/reference/get_likelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) get the likelihood in the output file — get_likelihood","title":"(internal function) get the likelihood in the output file — get_likelihood","text":"(internal function) find likelihood value (optimum found) output file lifelihood program","code":""},{"path":"/reference/get_likelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) get the likelihood in the output file — get_likelihood","text":"","code":"get_likelihood(lines, group_by_group = FALSE)"},{"path":"/reference/get_likelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) get the likelihood in the output file — get_likelihood","text":"lines vector output file, element line file group_by_group boolean indicating whether analysis made group group (default false)","code":""},{"path":"/reference/get_likelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) get the likelihood in the output file — get_likelihood","text":"parsed likelihood","code":""},{"path":"/reference/get_param_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Get the parameter ranges/boundaries in the output file — get_param_ranges","title":"(internal function) Get the parameter ranges/boundaries in the output file — get_param_ranges","text":"(internal function) Find parameter ranges/boundaries output file lifelihood program","code":""},{"path":"/reference/get_param_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Get the parameter ranges/boundaries in the output file — get_param_ranges","text":"","code":"get_param_ranges(lines)"},{"path":"/reference/get_param_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Get the parameter ranges/boundaries in the output file — get_param_ranges","text":"lines Vector output file, element line file","code":""},{"path":"/reference/get_param_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Get the parameter ranges/boundaries in the output file — get_param_ranges","text":"dataframe parsed parameter ranges/boundaries","code":""},{"path":"/reference/get_ratio_max.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Get the ratio max in the output file — get_ratio_max","title":"(internal function) Get the ratio max in the output file — get_ratio_max","text":"(internal function) Find ratio max value output file lifelihood program","code":""},{"path":"/reference/get_ratio_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Get the ratio max in the output file — get_ratio_max","text":"","code":"get_ratio_max(lines)"},{"path":"/reference/get_ratio_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Get the ratio max in the output file — get_ratio_max","text":"lines Vector output file, element line file","code":""},{"path":"/reference/get_ratio_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Get the ratio max in the output file — get_ratio_max","text":"parsed ratio max","code":""},{"path":"/reference/get_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Get the seeds in the output file — get_seeds","title":"(internal function) Get the seeds in the output file — get_seeds","text":"(internal function) Find seeds value output file lifelihood program","code":""},{"path":"/reference/get_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Get the seeds in the output file — get_seeds","text":"","code":"get_seeds(lines, group_by_group = FALSE)"},{"path":"/reference/get_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Get the seeds in the output file — get_seeds","text":"lines Vector output file, element line file group_by_group Boolean indicating whether analysis made group group (default false)","code":""},{"path":"/reference/get_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Get the seeds in the output file — get_seeds","text":"vector parsed seeds","code":""},{"path":"/reference/get_seeds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(internal function) Get the seeds in the output file — get_seeds","text":"List parsing functions use read output file lifelihood program","code":""},{"path":"/reference/lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function of the lifelihood program — lifelihood","title":"Main function of the lifelihood program — lifelihood","text":"Main function lifelihood program","code":""},{"path":"/reference/lifelihood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function of the lifelihood program — lifelihood","text":"","code":"lifelihood(   df,   path_config,   sex,   sex_start,   sex_end,   maturity_start,   maturity_end,   clutchs,   death_start,   death_end,   models,   covariates,   matclutch = FALSE,   matclutch_size = NULL,   param_range_df = NULL,   group_by_group = FALSE,   MCMC = 0,   interval = 25,   SEcal = 0,   saveprobevent = 0,   fitness = 0,   r = 0,   seeds = c(12, 13, 14, 15),   ntr = 2,   nst = 2,   To = 50,   Tf = 1,   climbrate = 1,   precision = 0.001 )"},{"path":"/reference/lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function of the lifelihood program — lifelihood","text":"df Dataframe data life history. one row per life history / observation. path_config Path configuration file (YAML). sex Column name containing sex observations. sex_start Column name containing first date interval sex determined. sex_end Column name containing second date interval sex determined. maturity_start Column name containing first date interval maturity determined. maturity_end Column name containing second date interval maturity determined. clutchs Vector containing names clutch columns. order : first clutch first date, first clutch second date, first clutch clutch size, second clutch first date, first clutch second date, second clutch clutch size, . observation clutches , example, 10, vector must size 10 x 3 = 30 (3 elements per clutch: first date, second date size). death_start Column name containing first date interval death determined. death_end Column name containing second date interval death determined. models Vector characters name statistical law use. Must length 3 element must \"wei\", \"exp\", \"gam\" \"lgn\". first one used maturity, second one used clutchs third one death. covariates Vector containing names covariates. matclutch Whether maturity event (designated maturity_start maturity_end) clutch event . TRUE, must specify matclutch_size argument. matclutch_size Column name containing size clutch maturity event. used (required) matclutch TRUE. param_range_df Dataframe parameter ranges/boundaries/boundaries group_by_group Option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal Compute standard error parameter using Hessian matrix saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seeds Numbers used reproduce results (seeds = results) ntr Number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning","code":""},{"path":"/reference/parse_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsing functions used to read the output file of the program — parse_output","title":"Parsing functions used to read the output file of the program — parse_output","text":"parse_output(): Find specific result output file lifelihood program, according element argument. function aggregator get_*() functions described . get_seeds(): find seeds value output file lifelihood program. get_likelihood(): find likelihood value (optimum found) output file lifelihood program. get_param_ranges(): find parameter ranges/boundaries output file lifelihood program. get_ratio_max(): find ratio max value output file lifelihood program. get_effects(): find estimated effects output file lifelihood program.","code":""},{"path":"/reference/parse_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsing functions used to read the output file of the program — parse_output","text":"","code":"parse_output(lines, element, group_by_group = FALSE)  get_seeds(lines, group_by_group = FALSE)  get_likelihood(lines, group_by_group = FALSE)  get_param_ranges(lines)  get_ratio_max(lines)  get_effects(lines, group_by_group = FALSE)"},{"path":"/reference/parse_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parsing functions used to read the output file of the program — parse_output","text":"lines Vector output file (.), element line file. element Name result parse. Must one 'seeds', 'likelihood', 'effects', 'parameter_ranges', 'ratio_max'. group_by_group Boolean indicating whether parsing performed group group (FALSE default). argument necessary structure output file different depending whether analysis carried \"group group\" (analysis method used different, certain parsers).","code":""},{"path":"/reference/parse_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parsing functions used to read the output file of the program — parse_output","text":"parsed element","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/read_output_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"(internal function) Read and format the output file of the program — read_output_from_file","title":"(internal function) Read and format the output file of the program — read_output_from_file","text":"(internal function) Takes file path output file read results using parsers parse_output()","code":""},{"path":"/reference/read_output_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(internal function) Read and format the output file of the program — read_output_from_file","text":"","code":"read_output_from_file(file_path, group_by_group = FALSE)"},{"path":"/reference/read_output_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(internal function) Read and format the output file of the program — read_output_from_file","text":"file_path Location output file programme group_by_group Boolean indicating whether analysis made group group (default false)","code":""},{"path":"/reference/read_output_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(internal function) Read and format the output file of the program — read_output_from_file","text":"object class LifelihoodResults results output file","code":""},{"path":"/reference/read_output_from_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(internal function) Read and format the output file of the program — read_output_from_file","text":"Functions used read output file create object results","code":""},{"path":"/reference/run_lifelihood.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Lifelihood program — run_lifelihood","title":"Run Lifelihood program — run_lifelihood","text":"Run Lifelihood program console mode","code":""},{"path":"/reference/run_lifelihood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Lifelihood program — run_lifelihood","text":"input_file file model data fitted custom_file file min max boudaries parameter GbyG Option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal Compute standard error eahc parameter using Hessian matrix saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seed1 first seed used random values can found (https://en.wikipedia.org/wiki/Multiply--carry_pseudorandom_number_generator) seed2 second seed used random values can found seed3 third seed used random values can found seed4 fourth seed used random values can found ntr number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning","code":""},{"path":"/reference/run_lifelihood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Lifelihood program — run_lifelihood","text":"dataset simulated hatch rate","code":""},{"path":"/reference/run_lifelihood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Lifelihood program — run_lifelihood","text":"","code":"library(here) #> here() starts at /Users/josephbarbier/Desktop/Lifelihood  # path to inputs input_file = file.path(    'data', 'raw_data', 'DataPierrick_GroupbyGroup',    '100%mort_Pierrick211genoparinteraction.txt' ) custom_file = file.path('data', 'custom.txt') # run the program run_lifelihood(    input_file = input_file,    custom_file = custom_file )"},{"path":"/reference/run_lifelihood_console.html","id":null,"dir":"Reference","previous_headings":"","what":"Run lifelihood program — run_lifelihood_console","title":"Run lifelihood program — run_lifelihood_console","text":"Run lifelihood program console mode","code":""},{"path":"/reference/run_lifelihood_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run lifelihood program — run_lifelihood_console","text":"","code":"run_lifelihood_console(   infile = \"100%mort_Pierrick211genoparinteraction.txt\",   customfile = \"custom.txt\",   GbyG = 0,   MCMC = 0,   interval = 25,   SEcal = 0,   saveprobevent = 0,   fitness = 0,   r = 0,   seed1 = 12,   seed2 = 13,   seed3 = 14,   seed4 = 15,   ntr = 2,   nst = 2,   To = 50,   Tf = 1,   climbrate = 1,   precision = 0.001 )"},{"path":"/reference/run_lifelihood_console.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run lifelihood program — run_lifelihood_console","text":"infile file model data fitted customfile file min max boudaries parameter GbyG Option fit full factorail model interactions factors MCMC Perform MCMC sampling parameter convergence estimate 95% confidence interval interval TBD - Check actual meaning SEcal Compute standard error eahc parameter using Hessian matrix saveprobevent TBD - Check actual meaning fitness Reparametrize model one parameter lifetime reproductive success r Reparametrize model one parameter intrinsic rate increase seed1 first seed used random values can found (https://en.wikipedia.org/wiki/Multiply--carry_pseudorandom_number_generator) seed2 second seed used random values can found seed3 third seed used random values can found seed4 fourth seed used random values can found ntr number thread paralelisation ? nst TBD - Check actual meaning Initial temperature simulated annealing Tf Initial temperature simulated annealing climbrate Rate simulated annealing ? precision TBD - Check actual meaning","code":""},{"path":"/reference/run_lifelihood_console.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run lifelihood program — run_lifelihood_console","text":"dataset simulated hatch rate","code":""},{"path":"/reference/run_lifelihood_console.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run lifelihood program — run_lifelihood_console","text":"","code":"run_lifelihood_console(infile=\"100%mort_Pierrick211genoparinteraction.txt\", ntr=10, To=50, Tf=1, seed2=34) #> [1] \"\\\\Users\\\\josephbarbier\\\\Desktop\\\\Lifelihood\\\\docs\\\\reference\\\\100%mort_Pierrick211genoparinteraction.txt \\\\Users\\\\josephbarbier\\\\Desktop\\\\Lifelihood\\\\docs\\\\reference\\\\custom.txt 0 0 25 0 0 0 0 12 34 14 15 10 2 50 1 1 0.001\" #> arguments 'show.output.on.console', 'minimized' and 'invisible' are for Windows only #> Warning: error in running command"},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom summary function for lifelihood — summary","title":"Custom summary function for lifelihood — summary","text":"Creates custom summary method LifelihoodResults object","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom summary function for lifelihood — summary","text":"","code":"# S3 method for LifelihoodResults summary(object, ...)"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom summary function for lifelihood — summary","text":"object LifelihoodResults object lifelihood()","code":""},{"path":"/reference/write_param_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Write the .txt file containing the parameter ranges (historically known as custom.txt) — write_param_range","title":"Write the .txt file containing the parameter ranges (historically known as custom.txt) — write_param_range","text":"write_param_range()takes data frame parameter ranges writes .txt file given path (argumentfile_name`). values used lifelihood find range optimise given parameter.","code":""},{"path":"/reference/write_param_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write the .txt file containing the parameter ranges (historically known as custom.txt) — write_param_range","text":"","code":"write_param_range(data, file_name = \"param_range.txt\")"},{"path":"/reference/write_param_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write the .txt file containing the parameter ranges (historically known as custom.txt) — write_param_range","text":"data dataframe 3 columns: parameter names, minimum value maximum value file_name Path (string) .txt file stored","code":""}]
